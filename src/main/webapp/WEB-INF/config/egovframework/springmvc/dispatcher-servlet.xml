<?xml version="1.0" encoding="UTF-8"?>

<!-- beans : 스프링의 객체를 의미, 객체들 / 정의에 대한 규격서(스키마) - 스카마 방식, dtd 방식 2가지가 존재 
	단지 정의하는 방식일 뿐이다. 
	ns : name space xsi : name space 들의 schema 위치 : http://www.springframework.org/schema/beans/spring-beans-4.0.xsd 
	접두어 없는 경우 : "http://www.springframework.org/schema/beans" 이 schema 규격을 따름 
	xmlns:p     : "http://www.springframework.org/schema/p" 해당 규격을 따름 context, mvc도 마찬가지 -->
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:p="http://www.springframework.org/schema/p"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.0.xsd
                		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.0.xsd
                		http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-4.0.xsd">


	<!-- bean scan 분리 이유 : dispathcer servlet는 frontController 역할로서 
							요청을 수행할 업무 컨트롤러에서 요청을 위임하는 역할 수행, 
							이때 요청에 관련된 bean들만 올리면되지 굳이 관련 없는 bean들도 한번에 올릴 필요가 없다. -->
	<context:component-scan base-package="healthclub">
		<!-- 디스패처 서블릿은 관문역할이여서 controller만 올리고 생명주기를 관리한다. 디스패처 서블릿의 역할이 아니다. -->
		<context:include-filter type="annotation" expression="org.springframework.stereotype.Controller" />
		<context:exclude-filter type="annotation" expression="org.springframework.stereotype.Service" />
		<context:exclude-filter type="annotation" expression="org.springframework.stereotype.Repository" />
	</context:component-scan>


	<!-- controller를 호출하는 핸들러매핑 -->
	<bean class="org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping" />


	<!-- 실제 controller를 수행하는 핸들러어댑터 -->
	<bean class="org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter">
		<property name="webBindingInitializer">
			<bean class="egovframework.example.cmmn.web.EgovBindingInitializer" />
		</property>
	</bean>


	<!-- .do로 오는 요청 url 중 mapping 형식의 url의 경우 intercepter 수행하도록 설정 -->
	<mvc:interceptors>
		<mvc:interceptor>
			<!-- 포함할 interceptor 경로 패턴 -->
			<mvc:mapping path="/**/*.do" />

			<!-- 제회할 interceptor 경로 패턴 -->
			<mvc:exclude-mapping path="/cmm/cmm1000/cmm1000/selectCmm1000Logout.do"/>

			<!-- 수행할 interceptor 클래스 -->
			<bean class="healthclub.com.util.Interceptor" />
		</mvc:interceptor>
	</mvc:interceptors>




	<!-- ViewResolver : 2가지 viewResolver를 등록
		 1. BeanNameViewResolver : 반환된 논리적 view명과 동일한 id를 가지는 bean(view 구현체)을 찾아서 view로 반환
		 2. UrlBasedViewResolver : 반환값에 접두사, 접미사를 붙여서 해당 경로에 존재하는 view를 반환 -->
	
	<!-- 1. BeanNameViewResolver -->
	<bean class="org.springframework.web.servlet.view.BeanNameViewResolver">
		<property name="order" value="0" />
	</bean>

	<!-- bean으로 등록된 MappingJackson2JsonView 클래스, 반환된 view명이 "jsonView" 인 경우 동작-->
	<bean id="jsonView" class="org.springframework.web.servlet.view.json.MappingJackson2JsonView">
		<property name="contentType" value="application/json;charset=UTF-8"/>
	</bean>

	<!-- 2. UrlBasedViewResolver : ViewResolver 구현체로 특별한 맵핑 정보 없이 view 이름을 URL로  사용 -->
	<bean class="org.springframework.web.servlet.view.UrlBasedViewResolver">
		  <property name="order" value="1"/>
		  <property name="viewClass" value="org.springframework.web.servlet.view.JstlView"/>
		  <property name="prefix" value="/WEB-INF/jsp/views/"/>
		  <property name="suffix" value=".jsp"/>
	</bean>


	<!-- SimpleMappingExceptionResolver : DispatcherServlet 설정 XML 파일에서 설정하는 것만으로 Exception 별로 원하는 화면에 연결 -->
	 <bean class="org.springframework.web.servlet.handler.SimpleMappingExceptionResolver">
		<!-- defaultErrorView: 모든 예외 발생 시 이동할 페이지 설정 -->
		<property name="defaultErrorView" value="errors/info" />

		<!-- exceptionMappings: 특정 예외에 대한 페이지 설정,  key : 예외 타입 Vale : 이동 페이지 -->
        <property name="exceptionMappings">
            <props>
                <prop key="org.springframework.dao.DataAccessException">errors/info</prop>
                <prop key="org.springframework.transaction.TransactionException">errors/info</prop>
                <prop key="egovframework.rte.fdl.cmmn.exception.EgovBizException">errors/info</prop>
                <prop key="org.springframework.security.AccessDeniedException">errors/info</prop>
            </props>
        </property>
	</bean>


</beans>