<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <groupId>health-club3</groupId>
	<artifactId>health-club3</artifactId>
	<packaging>war</packaging>
	<version>1.0.0</version>
	<name>health-club3</name>
	<url>http://www.egovframe.go.kr</url>

	<!-- 라이센스 정보 -->
	<licenses>
        <license>
            <name>The Apache Software License, Version 2.0</name>
            <url>http://www.apache.org/licenses/LICENSE-2.0.txt</url>
        </license>
    </licenses>
    
    <!-- 목적
    	 의존성 관리 : 프로젝트에서 사용되는 라이브러리의 버전을 명시적으로 지정, 버전이나 기능이 변경되었을 때 예기치 않은 문제가 발생하는 것을 방지
    	 유지보수 협업: 특정 기능이나 버그 수정을 적용하기 위해 필요한 버전을 파악하고 관리하기가 용이 -->
	<properties>
		<!--  Spring Framework의 버전이 4.3.16.RELEASE로 지정 -->
	    <spring.maven.artifact.version>4.3.16.RELEASE</spring.maven.artifact.version>
	    <!-- 전자 정부 프레임 워크의 버전을 정의 rte(run time environment) -->
		<egovframework.rte.version>3.8.0</egovframework.rte.version>
	</properties>


	<!-- Maven 프로젝트에서 외부 라이브러리 및 종속성을 다운로드할 위치를 지정 -->
	<repositories>
		
		<!-- 메이븐  중앙 저장소 -->
		<repository>
			<!-- id : 각 요소를 식별하는 고유 -->
			<id>mvn2</id>
			<!-- url :  Maven은 해당 URL을 사용하여 저장소에서 필요한 라이브러리를 검색 -->
			<url>http://repo1.maven.org/maven2/</url>
			
			<!-- 릴리즈 버전 사용 허용 여부 : 검증된 안정적 버전 -->
			<releases>
				<enabled>true</enabled>
			</releases>
			
			<!-- 스냅샷 버전 허용여부 : 개발 중이 최신 버전 -->
			<snapshots>
				<enabled>true</enabled>
			</snapshots>
		</repository>
		
		<!-- 정부 전자 프래임워크의 저장소 -->
		<repository>
			<id>egovframe</id>
			
			<url>http://www.egovframe.go.kr/maven/</url>
			
			<releases>
				<enabled>true</enabled>
			</releases>
			
			<snapshots>
				<enabled>false</enabled>
			</snapshots>
			
		</repository>
		
		<!-- 정부 전자 프래임워크의 저장소 : 정부 전자 프레임워크의 공식 저장소에서도 필요한 라이브러리를 다운로드하여 사용 -->
		<repository>
			<id>egovframe2</id>
			
			<url>http://maven.egovframe.kr:8080/maven/</url>
			
			<releases>
				<enabled>true</enabled>
			</releases>
			
			<snapshots>
				<enabled>false</enabled>
			</snapshots>
			
		</repository>
		
	</repositories>



	<!-- 의존 관계를 받아오기 위해서는 인터넷이 되어야함. 기업의 경우 보안의 문제점이 존재. 그래서 외부에서 다 셋팅을 하고 빌드를 하면 내 로컬에 필요 라이브러리가 다운로드가 되어있다. -->
	<dependencies>
		
		<!-- 표준프레임워크 실행환경  전자정부 프레임워크의 표준 MVC 구현체 -->
        <dependency>
        	<!-- groupId:  프로젝트의 그룹을 식별하는 문자열  주로 조직이나 회사의 도메인 이름을 역순으로 사용 -->
		    <groupId>egovframework.rte</groupId>
		    
		    <!-- artifactId: 프로젝트의 이름이나 모듈의 이름을 사용 -->
		    <artifactId>egovframework.rte.ptl.mvc</artifactId>
		    
		    <version>${egovframework.rte.version}</version>
		    
		    <!-- 의존된 library 중 특정 라이브러리를 제외 -->
		    <exclusions>
		    	<exclusion>
		    		<artifactId>commons-logging</artifactId>
		    		<groupId>commons-logging</groupId>
		    	</exclusion>
		    </exclusions>
		    
        </dependency>
        
        
		<!-- 전자정부 프레임워크의 데이터 액세스 모듈 : 다양한 데이터베이스 솔루션 및 데이터베이스 접근 기술에 일관된 방식으로 대응하기 위한 서비스 
			  계층 관계에 의해 추가된 하위 라이브러리   :  log4j-core, log4j-slf4j-impl, ibatis, mybatis, spring-jdbc
			Dependency Hierarchy에서 확인 -->        
        <dependency>
		    <groupId>egovframework.rte</groupId>
		    <artifactId>egovframework.rte.psl.dataaccess</artifactId>
		    <version>${egovframework.rte.version}</version>
        </dependency>
        
        
        <!-- 전자정부 프레임워크의 ID 생성 모듈 
        	 전자정부 프레임워크에서 시스템 개발 시에 사용할 수 있는 유일한 ID를 생성할 수 있도록 제공하는 서비스
        	 업로드된 파일의 유일한 이름 또는 테이블의 Primary Key 역할을 할 ID를 생성하는 용도로 사용
        	 TODO 사용 빈도가 낮아 보이는데 개발 중 진짜 안쓰면 제거  -->
        <dependency>
			<groupId>egovframework.rte</groupId>
			<artifactId>egovframework.rte.fdl.idgnr</artifactId>
			<version>${egovframework.rte.version}</version>
		</dependency>
		
		
		<!-- 전자정부 프레임워크의 속성 관리 모듈
			 전자정부프레임워크에서는 xml 을 이용하여 설정정보를 저장하고 이를 사용할 수 있도록 구성
			 context-properties.xml을 이전 .properties처럼 사용-->
       	<dependency>
			<groupId>egovframework.rte</groupId>
			<artifactId>egovframework.rte.fdl.property</artifactId>
			<version>${egovframework.rte.version}</version>
		</dependency>
		
		
		<!-- 전자정부 프레임워크의 암호화 관리 모듈
			 전자정부프레임워크에서 제공하는 암호화 클래스를 이용하여 암호화 수행
			 globals.properties의 database 정보 혹은 사용자 비밀번호 암호화 수행 가능하도록 도와준다. 
			 version을 직접적으로 작성해주고 해당 버전에 맞춰서 context-crypto.xml의 beans의 http://maven.egovframe.go.kr/schema/egov-crypto/egov-crypto-3.10.0.xsd 를 맞춰줘야지 
			 "Unable to locate Spring NamespaceHandler for XML schema namespace" 에러가 발생하지 않음
			 -->
		<dependency>
			<groupId>egovframework.rte</groupId>
			<artifactId>egovframework.rte.fdl.crypto</artifactId>
			<version>3.10.0</version>
		</dependency>
		
		<!-- Servlet API를 포함하는 라이브러리 -->
        <dependency>
		    <groupId>javax.servlet</groupId>
		    <artifactId>servlet-api</artifactId>
		    <!-- scope : 컴파일 시에는 필요하지만 런타임 시에는 웹 컨테이너에 의해 제공 -->
		    <scope>provided</scope>
		    <version>2.5</version>
        </dependency>
        
        
		<!--  JSTL(JSP Standard Tag Library)을 제공하는 라이브러리 -->
        <dependency>
		    <groupId>javax.servlet</groupId>
		    <artifactId>jstl</artifactId>
		    <version>1.2</version>
        </dependency>
        
        <!-- taglib 지시어는 JSP 기능을 좀더 확장할 수 있는 개념으로 사용자 정의 태그를 사용할 수 있다.  -->
        <dependency>
			<groupId>taglibs</groupId>
			<artifactId>standard</artifactId>
			<version>1.1.2</version>
		</dependency>
        

        <!-- 데이터 베이스 연결 풀링 -->
        <dependency>
            <groupId>commons-dbcp</groupId>
            <artifactId>commons-dbcp</artifactId>
            <version>1.4</version>
        </dependency>
        
        <!-- 오라클 jdbc 드라이브 -->
        <dependency>
            <groupId>ojdbc</groupId>
            <artifactId>ojdbc</artifactId>
            <version>8</version>
            <scope>system</scope>
            <systemPath>${basedir}/src/main/webapp/WEB-INF/lib/ojdbc8.jar</systemPath>
        </dependency>
        
        <!-- 응답 값을 json으로 전송하는 라이브러리 추가 -->
		<dependency>
		  <groupId>com.fasterxml.jackson.core</groupId>
		  <artifactId>jackson-databind</artifactId>
		  <version>2.9.10</version>
		</dependency>
		

		<!-- 스프링에서 SQL문을 실행한 로그를 효과적이고 직관적으로 볼 수 있도록 해주는 라이브러리 -->
		<dependency>
		        <groupId>org.bgee.log4jdbc-log4j2</groupId>
		        <artifactId>log4jdbc-log4j2-jdbc4.1</artifactId>
		        <version>1.16</version>
	    </dependency>
 

		<!-- 비밀번호 암호화를 위한 구글 라이브러리  : SHA 256 형식 단방향 암호화-->
	  <dependency>
	    <groupId>com.google.guava</groupId>
	    <artifactId>guava</artifactId>
	    <version>31.1-jre</version>
	  </dependency>
		
		
	</dependencies>

	<build>
        <defaultGoal>install</defaultGoal>
        <directory>${basedir}/target</directory>
        <finalName>${artifactId}</finalName>
        
        <pluginManagement>
            <plugins>
            
            
                <plugin>
	                <groupId>org.apache.tomcat.maven</groupId>
	                <artifactId>tomcat7-maven-plugin</artifactId>
	                <version>2.2</version>
	                <configuration>
	                    <port>80</port>
	                    <path>/</path>
	                    <systemProperties>
	                        <JAVA_OPTS>-Xms256m -Xmx768m -XX:MaxPermSize=256m</JAVA_OPTS>
	                    </systemProperties>
	                </configuration>
	            </plugin>
	            
	            
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-compiler-plugin</artifactId>
                    <configuration>
                        <source>1.8</source>
                        <target>1.8</target>
                        <encoding>UTF-8</encoding>
                    </configuration>
                </plugin>
                
                
                <plugin>
                    <groupId>org.codehaus.mojo</groupId>
                    <artifactId>hibernate3-maven-plugin</artifactId>
                    <version>2.1</version>
                    
                    <configuration>
                        <components>
                            <component>
                                <name>hbm2ddl</name>
                                <implementation>annotationconfiguration</implementation>
                            </component>
                        </components>
                    </configuration>
                    
                    <dependencies>
                        <dependency>
                            <groupId>org.hsqldb</groupId>
                            <artifactId>hsqldb</artifactId>
                            <version>2.3.2</version>
                        </dependency>
                    </dependencies>
                    
                </plugin>
                
                
                <!-- EMMA -->
                <plugin>
                    <groupId>org.codehaus.mojo</groupId>
                    <artifactId>emma-maven-plugin</artifactId>
                    <version>1.0-alpha-3</version>
                </plugin>
                
                
                <!-- PMD manven plugin -->
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-pmd-plugin</artifactId>
                    <version>3.1</version>
                </plugin>
                
                
            </plugins>
        </pluginManagement>
        
        
        <plugins>
            <!-- EMMA -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-surefire-plugin</artifactId>
                <configuration>
                    <skipTests>true</skipTests>
                    <forkMode>once</forkMode>
                    <reportFormat>xml</reportFormat>
                    <excludes>
                        <exclude>**/Abstract*.java</exclude>
                        <exclude>**/*Suite.java</exclude>
                    </excludes>
                    <includes>
                        <include>**/*Test.java</include>
                    </includes>
                </configuration>
            </plugin>
            
            
            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>emma-maven-plugin</artifactId>
                <inherited>true</inherited>
            </plugin>
            
            
            <!-- JavaDoc -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-javadoc-plugin</artifactId>
                <version>2.9.1</version>
            </plugin>
            
            
        </plugins>
        
        
    </build>
    
    
    <reporting>
        <outputDirectory>${basedir}/target/site</outputDirectory>
        
        <plugins>
        
        
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-project-info-reports-plugin</artifactId>
                <version>2.7</version>
                <reportSets>
                    <reportSet>
                        <id>sunlink</id>
                        <reports>
                            <report>javadoc</report>
                        </reports>
                        <inherited>true</inherited>
                        <configuration>
                            <links>
                                <link>http://docs.oracle.com/javase/6/docs/api/</link>
                            </links>
                        </configuration>
                    </reportSet>
                </reportSets>
            </plugin>
            
            
            <!-- JUnit Test Results & EMMA Coverage Reporting -->
            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>emma-maven-plugin</artifactId>
                <inherited>true</inherited>
            </plugin>
            
            
            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>surefire-report-maven-plugin</artifactId>
                <inherited>true</inherited>
                <reportSets>
                    <reportSet>
                        <reports>
                            <report>report-only</report>
                        </reports>
                    </reportSet>
                </reportSets>
            </plugin>
            
            
            <!-- Generating JavaDoc Report -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-javadoc-plugin</artifactId>
                <configuration>
                    <minmemory>128m</minmemory>
                    <maxmemory>512m</maxmemory>
                    <encoding>${encoding}</encoding>
                    <docencoding>${encoding}</docencoding>
                    <charset>${encoding}</charset>
                </configuration>
            </plugin>
            
            
            <!-- Generating Java Source in HTML -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-jxr-plugin</artifactId>
                <configuration>
                    <inputEncoding>${encoding}</inputEncoding>
                    <outputEncoding>${encoding}</outputEncoding>
                    <linkJavadoc>true</linkJavadoc>
                    <javadocDir>apidocs</javadocDir>
                </configuration>
            </plugin>
            
            
        </plugins>
        
        
    </reporting>
    
    
</project>
